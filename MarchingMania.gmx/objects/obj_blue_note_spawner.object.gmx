<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_note_spawner</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create the blue note spawner
alarm[0] = 30;
beat = 1;
song = MaryHadALittleLamb;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///play the notes
MaryHadALittleLamb();
if(string_char_at(b, beat) == "1")
{
    instance_create(x,y,obj_blue_note);   //if there is a note at the position labled in the song file, spawn a blue note
    beat++;
    obj_player.possible_points += 10;
}
else
{
    beat++;
}
if(beat &gt;= 44)
{
    //stop game and display points
    show_debug_message("GAME OVER!");
    show_debug_message("Scored points: " + string(obj_player.points));
    show_debug_message("Possible points: " + string(obj_player.possible_points));
    //Calculate percent accuracy and grade player
    percent = (obj_player.points/obj_player.possible_points)*100;
    show_debug_message("Percent accuracy: " + string(percent) + "%");
    if(percent &gt;= 90) show_debug_message("Grade: A");
    else if(90 &gt; percent &amp;&amp; percent &gt;= 80) show_debug_message("Grade: B");
    else if(80 &gt; percent &amp;&amp; percent &gt;= 70) show_debug_message("Grade: C");
    else if(70 &gt; percent &amp;&amp; percent &gt;= 60) show_debug_message("Grade: D");
    else if(60 &gt; percent) show_debug_message("Grade: F");
    game_end();
}
alarm[0] = bpm;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
